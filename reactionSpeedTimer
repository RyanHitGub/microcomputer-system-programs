from gpio import *
from time import *
from random import randrange

def main():
    #LED
    pinMode(1, OUT)
    #Rocker Switch
    pinMode(0, IN)
    #LCD	
    pinMode(2, OUT)
    #Reaction Button
    pinMode(3, IN)
    #Reset Button
    pinMode(4, IN)

    # time to allow user to get ready
    gracePeriod = 1000
      
    buttonPushed = False
    
    print(digitalRead(0))
    print("Blinking")

    while True:
        # Everything is off
   	    digitalWrite(1, LOW)
   	    buttonPushed = False
   	    customWrite(2, "")

        # Rocker Switch is on
   	    if isActive():
            # Random time between 1 and 5 seconds
            timeDelay = randrange(1000, 5000)

            delay(gracePeriod)
            delay(timeDelay)

            # Check if Rocker Switch is off
   		    isOff()

            # LED is on
   		    digitalWrite(1, HIGH)

            # Record first time
   		    time1 = time()

            # Loop while the reset button has not been pushed
   		    while buttonPushed == False:

                # Reaction button is pressed
   			    if digitalRead(3) == HIGH:
                    # Record second time
   				    time2 = time()
                    # Calculate and display the time taken
                    timeTaken = time2 - time1
                    customWrite(2, timeTaken)

                # Reset button is pressed and the loop is broken, resetting the system
   			    elif digitalRead(4) == HIGH:
   				    buttonPushed = True

        # Rocker Switch is off
        else:
            digitalWrite(1, LOW)
   		    customWrite(2, "")

# Check if Rocker Switch is on or off
def isActive():
    if digitalRead(0) == HIGH:
   	    return True
    elif digitalRead(0) == LOW:
   	    return False
   
# Check if Reaction button is pressed	 
def isPushed():
    if digitalRead(3) == HIGH:
   	    return True
    elif digitalRead(3) == LOW:
   	    return False

# Check if Rocker Switch is off
def isOff():
    if digitalRead(0) == LOW:
   	    cleanUp()

# Print a debug message
def cleanUp():
    print("Finished")

if __name__ == "__main__":
    main()
