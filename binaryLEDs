from gpio import *
from time import *
from random import randrange

def main():
	pinMode(0, OUT)
	pinMode(1, OUT)
	pinMode(2, OUT)
	pinMode(3, OUT)
	pinMode(4, OUT)
	pinMode(5, OUT)
	pinMode(6, OUT)
	pinMode(7, OUT)
	pinMode(8, OUT)
	pinMode(9, IN)
	
	customWrite(0, "")

	while True:
		digitalWrite(1, 0)
		digitalWrite(2, 0)
		digitalWrite(3, 0)
		digitalWrite(4, 0)
		digitalWrite(5, 0)
		digitalWrite(6, 0)
		digitalWrite(7, 0)
		digitalWrite(8, 0)
		
		if digitalRead(9, HIGH):
			decimalNumber = randrange(0, 256)
			# bin() returns the binary number and [2:] cuts off the first two characters
			binaryDisplay(bin(decimalNumber)[2:])
			# Display both DEC and HEX number
			customWrite(0, "DEC: " + str(decimalNumber) + "\n" +
						   "HEX: " + str(hex(decimalNumber)[2:]))
			delay(2000)
		else:
			customWrite(0, "")

# Turn on/off the correct LEDs to represent the decimal number as binary
def binaryDisplay(number):
	# Returns number as string list
	map(int, str(number))
	count = len(number)
	for item in number:
		# Binary number is in a string list
		# Last element in list is the first LED
		# Check if element is '1' therefore HIGH else LOW
		digitalWrite(count, HIGH if item == '1' else LOW)
		# Move to next LED
		count -= 1
	
if __name__ == "__main__":
	main()
